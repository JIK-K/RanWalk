plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')

def flutterGoogleMapKey = localProperties.getProperty('flutter.GoogleMapKey')
if (flutterGoogleMapKey == null) {
    flutterGoogleMapKey = ''
}
android {
    namespace = "com.example.ranwalk"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.ranwalk"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        minSdkVersion flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
//        buildConfigField "String", "GOOGLE_API_KEY", properties['google_api_key']
//
//        manifestPlaceholders = [GOOGLE_API_KEY: google_api_key]
         resValue "string", "GOOGLE_MAP_KEY", flutterGoogleMapKey
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
